#!/usr/bin/env perl

use strict;
use warnings;
use File::Temp;
use Digest::MD5;
use YAML::XS;

local $/ = undef;

my %param = %{ YAML::XS::Load( <> ) };

use MYDan::Util::OptConf;
my %o = MYDan::Util::OptConf->load()->dump('collector');

exit 1 unless my $param = shift @{$param{argv}};


YAML::XS::DumpFile "$o{conf}/config", $param->{conf}


my $x = YAML::XS::LoadFile "$o{data}/output"
YAML::XS::DumpFile \*STDOUT, $x;
#for my $conf ( ref $param{argv}[0] ? @{ $param{argv} } : $param{argv} )
#{
#    my $path = delete $conf->{path};
#    my ( $fh, $temp ) = File::Temp::tempfile();
#    my $unlink = sub { unlink shift; exit 1 };
#
#    exit 1 unless defined $conf->{md5}
#        && $path && $fh && length $conf->{file};
#
#    exit 1 if $conf->{chown} && ! ( my @pw = getpwnam $conf->{chown} );
#
#    print $fh $conf->{file};
#    seek $fh, 0, 0;
#    my $md5 = Digest::MD5->new()->addfile( $fh )->hexdigest;
#    close $fh;
#
#    exit &$unlink( $temp ) if $md5 ne $conf->{md5};
#    exit &$unlink( $temp ) if system "mv $temp $path";
#    exit &$unlink( $path ) if $conf->{chmod}
#        && ! chmod oct $conf->{chmod}, $path;
#    exit &$unlink( $path ) if @pw && ! chown @pw[2,3], $path;
#}
#
#print "ok\n";
#exit 0;
