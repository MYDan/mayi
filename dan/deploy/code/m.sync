#!# perl: deploy/code/m.sync
use strict;
use Sys::Hostname;

use Data::Dumper;
use MYDan::Node;
use MYDan::Agent::GrsyncM;

my ( $conf, $port, %agent );
BEGIN{
    %agent = MYDan::Util::OptConf->load()->dump('agent');
    ( $conf, $port ) = @agent{qw( conf port )};
};

my %run = ( timeout => 60 , max => 500, user => 'root' );

return sub
{
    my %param = @_;

    my ( $batch, $param ) = @param{qw( batch param )};

    my $range = MYDan::Node->new( MYDan::Util::OptConf->load()->dump('range') );
    %run = ( %run, %$param );
    die "sp and dp undef.\n" if !$run{sp} && !$run{dp};

    $run{sp} = $run{dp} unless $run{sp};
    $run{dp} = $run{sp} unless $run{dp};

    my %sync = (
        dst => $batch,
        src => [ $range->load( delete $run{src} || hostname() )->list ],
        agent => \%agent,
    );

    if( $run{dp} eq $run{sp} )
    {
        my %src = map{ $_ => 1 }@{$sync{src}};
        die "'$run{sp}' are the same file on same host.\n" 
            unless grep{ ! $src{$_} }@{$sync{dst}};
    }

    my @failed = MYDan::Agent::GrsyncM->new( opt => \%run, sync => \%sync )->run();

    my %succ = map{ $_ => 'sync ok' }@$batch;
    map{ delete $succ{$_} }@failed;

    printf "failed [%s]:%s\n", scalar @failed, $range->load( \@failed )->dump();

    print "=" x 30,"\n";
    return %succ;
};
